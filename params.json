{"name":"Sensorjs","tagline":"node based sensor driver framework","body":"# Sensor.js\r\n\r\nSensor.js handles all about sensor with powerful and familiar techs.\r\nIn other words this sensorjs is not only sensor driver module but also framework like express.\r\n\r\nAnd it's working on linux boards such as the BeagleBone or Raspberry Pi.\r\n\r\n![gateway](https://raw.github.com/daliworks/sensorjs/master/doc/image/gateway.png \"gateway\")\r\n\r\n[Here](https://github.com/daliworks/sensorjs/blob/master/doc/custom_driver.md) is the guide to create your own driver.\r\n[Here](https://github.com/daliworks/sensorjs/blob/master/lib/sensor/README.md) is currently available sensor driver list.\r\n\r\nSee also [sensorjs-app](https://github.com/daliworks/sensorjs-app)\r\n\r\n## Installation\r\n\r\n    $ npm install sensorjs \r\n\r\n## sensor.js URL scheme\r\n### sensorjs://[{gateway}]/{sensor_network}[:{bus_id}]/{address}/{sensor_model}/{sensor_id}{&query_strings}\r\n - example\r\n    - ```sensorjs:///i2c:1/33/dht33/22-000003a7f590```\r\n    - ```sensorjs:///gpio/22/singleled/r222&name=sensingLed```\r\n    - ```sensorjs:///ble/000A3A58F310/proximity/0A3A58F310-1```\r\n\r\n## Example\r\n```js\r\nvar connect = require('sensorjs'),\r\n   sensorDriver = connect.sensor;\r\n\r\nvar app = connect().\r\n  use(connect.filter({$between: [-50, 50]})).  // filter: passing between -50 and 50\r\n  use(connect.average(20 /*duration*/)).  // reduce: values to an average every 20 sec.\r\n  use(function (data, next) {  // custom middleware\r\n    if (Math.max.apply(null, data.queue) < data.value) {\r\n      console.log('new record', data.value);\r\n    } \r\n    next();\r\n  }).\r\n  use(connect.queue(100)).                   // buffering max # of 100.\r\n  use('/w1/*/ds18b20', function (data, next) {\r\n    if (data.value > 20) {\r\n      console.log('getting hot:', data.value);\r\n    }\r\n    next();\r\n  }).\r\n  use('/gpio/*/dht11', function (data, next) {\r\n    if (data.value < 30) {\r\n      console.log('getting dry:', data.value);\r\n    }\r\n    next();\r\n  });\r\n  // transport(mqtt, localStorage, websocket and etc)\r\n  //use(connect.websocket('http://yourhost.com', 'temperature/{id}'/*topic*/));\r\n```\r\nMore examples are [here](https://github.com/daliworks/sensorjs/tree/master/example).\r\n\r\n[Facebook](https://www.facebook.com/groups/sensor.js)\r\n[Twitter](https://twitter.com/sensorjs)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}